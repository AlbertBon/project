<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <!-- 读取spring.application.name中的属性来生成日志文件名 -->
    <springProperty scope="context" name="log_path" source="app.logPath" defaultValue="/var/logs"/>
    <!-- 日志名称 -->
    <springProperty scope="context" name="log_name" source="app.name" defaultValue="no_name" />
    <!-- 日志名称 -->
    <springProperty scope="context" name="log_level" source="app.logLevel" defaultValue="INFO"/>


    <!-- 文件大小限制 -->
    <property name="MAX_FILE_SIZE" value="20MB"/>
    <!-- 文件数量限制 -->
    <property name="MAX_BACKUP" value="5"/>
    <!--日志文件保留天数-->
    <property name="MAX_HISTORY" value="30"/>

    <!-- 日志格式 -->
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
    <Property name="format" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />

    <!-- 控制台输出 输出设置 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!--<charset>utf8</charset>-->
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log_path}/${log_name}/info-%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--文件数量限制-->
            <!--<maxIndex>${MAX_BACKUP}</maxIndex>-->
            <!--日志文件保留天数-->
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>${format}</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 输出日志信息到文件  -->
    <appender name="SQL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log_path}/${log_name}/sql-%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${format}</pattern>
        </encoder>
    </appender>

    <!-- 日志输出级别 -->
    <root level="${log_level}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>

    <!--打印com.bon.dao包下日志 (打印sql),此logger虽然没有指定appender，但是他的上级root已经指定了，所以他会把信息交给上级 -->
    <logger name="com.bon.modules.sys.dao" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="SQL"/>
    </logger>


</configuration>